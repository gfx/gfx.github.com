digraph {
graph [overlap=false]
subgraph cluster_Router_Simple_Route {
	label="Router::Simple::Route";
	"Router::Simple::Route::BEGIN";
}
subgraph cluster_Config {
	label="Config";
	"Config::import";
	"Config::FETCH";
}
subgraph cluster_DynaLoader {
	label="DynaLoader";
	"DynaLoader::bootstrap";
}
subgraph cluster_base {
	label="base";
	"base::import";
}
subgraph cluster_warnings {
	label="warnings";
	"warnings::unimport";
	"warnings::import";
}
subgraph cluster_IO_File {
	label="IO::File";
	"IO::File::CORE:match";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_Plack_Util_Accessor {
	label="Plack::Util::Accessor";
	"Plack::Util::Accessor::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_Plack_App_URLMap {
	label="Plack::App::URLMap";
	"Plack::App::URLMap::BEGIN";
}
subgraph cluster_Kossy_Request {
	label="Kossy::Request";
	"Kossy::Request::BEGIN";
}
subgraph cluster_Plack_Middleware_Conditional {
	label="Plack::Middleware::Conditional";
	"Plack::Middleware::Conditional::BEGIN";
}
subgraph cluster_XSLoader {
	label="XSLoader";
	"XSLoader::load";
}
subgraph cluster_bytes {
	label="bytes";
	"bytes::import";
}
subgraph cluster_URI_Escape {
	label="URI::Escape";
	"URI::Escape::CORE:qr";
}
subgraph cluster_FileHandle {
	label="FileHandle";
	"FileHandle::import";
}
subgraph cluster_Exporter_Heavy {
	label="Exporter::Heavy";
	"Exporter::Heavy::heavy_export_tags";
}
subgraph cluster_constant {
	label="constant";
	"constant::import";
}
subgraph cluster_Exporter {
	label="Exporter";
	"Exporter::import";
	"Exporter::export_tags";
}
subgraph cluster_AutoLoader {
	label="AutoLoader";
	"AutoLoader::import";
}
subgraph cluster_HTTP_Body_UrlEncoded {
	label="HTTP::Body::UrlEncoded";
	"HTTP::Body::UrlEncoded::CORE:qr";
}
subgraph cluster_Kossy_Response {
	label="Kossy::Response";
	"Kossy::Response::BEGIN";
}
subgraph cluster_Text_Xslate_Util {
	label="Text::Xslate::Util";
	"Text::Xslate::Util::BEGIN";
}
subgraph cluster_Plack_Builder {
	label="Plack::Builder";
	"Plack::Builder::BEGIN";
}
subgraph cluster_parent {
	label="parent";
	"parent::BEGIN";
	"parent::CORE:subst";
	"parent::import";
}
subgraph cluster_overload {
	label="overload";
	"overload::import";
}
subgraph cluster_Plack_Util {
	label="Plack::Util";
	"Plack::Util::load_class";
}
subgraph cluster_UNIVERSAL {
	label="UNIVERSAL";
	"UNIVERSAL::VERSION";
}
subgraph cluster_Fcntl {
	label="Fcntl";
	"Fcntl::AUTOLOAD";
	"Fcntl::__ANON__[Fcntl.pm:230]";
}
subgraph cluster_warnings_register {
	label="warnings::register";
	"warnings::register::import";
}
"parent::import" -> "Exporter::Heavy::heavy_export_tags";
"parent::import" -> "Config::import";
"parent::import" -> "parent::CORE:subst";
"parent::import" -> "URI::Escape::CORE:qr";
"parent::import" -> "bytes::import";
"parent::BEGIN" -> "vars::import";
"parent::import" -> "vars::import";
"parent::import" -> "Exporter::export_tags";
"Plack::Util::load_class" -> "parent::import";
"Text::Xslate::Util::BEGIN" -> "parent::import";
"Plack::Builder::BEGIN" -> "parent::import";
"Kossy::Request::BEGIN" -> "parent::import";
"parent::import" -> "parent::import";
"Router::Simple::Route::BEGIN" -> "parent::import";
"Plack::Middleware::Conditional::BEGIN" -> "parent::import";
"Plack::App::URLMap::BEGIN" -> "parent::import";
"Kossy::Response::BEGIN" -> "parent::import";
"parent::import" -> "warnings::unimport";
"parent::import" -> "Exporter::import";
"parent::import" -> "DynaLoader::bootstrap";
"parent::import" -> "constant::import";
"parent::import" -> "HTTP::Body::UrlEncoded::CORE:qr";
"parent::import" -> "Fcntl::__ANON__[Fcntl.pm:230]";
"parent::import" -> "Plack::Util::Accessor::import";
"parent::BEGIN" -> "strict::unimport";
"parent::import" -> "strict::unimport";
"parent::import" -> "base::import";
"parent::import" -> "Fcntl::AUTOLOAD";
"parent::import" -> "IO::File::CORE:match";
"parent::import" -> "FileHandle::import";
"parent::import" -> "AutoLoader::import";
"parent::import" -> "XSLoader::load";
"parent::import" -> "overload::import";
"parent::import" -> "Config::FETCH";
"parent::import" -> "warnings::import";
"parent::import" -> "UNIVERSAL::VERSION";
"parent::BEGIN" -> "strict::import";
"parent::import" -> "strict::import";
"parent::import" -> "warnings::register::import";
}
