digraph {
graph [overlap=false]
subgraph cluster_Encode {
	label="Encode";
	"Encode::BEGIN";
	"Encode::CORE:match";
	"Encode::predefine_encodings";
	"Encode::encode_utf8";
	"Encode::decode";
	"Encode::decode_utf8";
	"Encode::find_encoding";
	"Encode::getEncoding";
	"Encode::LEAVE_SRC";
}
subgraph cluster_base {
	label="base";
	"base::import";
}
subgraph cluster_warnings {
	label="warnings";
	"warnings::unimport";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_Encode_Encoding {
	label="Encode::Encoding";
	"Encode::Encoding::CORE:match";
	"Encode::Encoding::renewed";
}
subgraph cluster_Kossy_Request {
	label="Kossy::Request";
	"Kossy::Request::BEGIN";
}
subgraph cluster_bytes {
	label="bytes";
	"bytes::import";
}
subgraph cluster_Exporter {
	label="Exporter";
	"Exporter::import";
}
subgraph cluster_utf8 {
	label="utf8";
	"utf8::encode";
}
subgraph cluster_Kossy_Response {
	label="Kossy::Response";
	"Kossy::Response::_body";
}
subgraph cluster_Encode_utf8 {
	label="Encode::utf8";
	"Encode::utf8::BEGIN";
	"Encode::utf8::decode_xs";
}
subgraph cluster_Encode_Alias {
	label="Encode::Alias";
	"Encode::Alias::CORE:match";
	"Encode::Alias::init_aliases";
}
subgraph cluster_Kossy {
	label="Kossy";
	"Kossy::__ANON__[lib/Kossy.pm:76]";
}
"Encode::encode_utf8" -> "utf8::encode";
"Encode::decode" -> "Encode::utf8::decode_xs";
"Encode::decode" -> "Encode::find_encoding";
"Encode::utf8::BEGIN" -> "bytes::import";
"Encode::BEGIN" -> "warnings::unimport";
"Encode::BEGIN" -> "Exporter::import";
"Kossy::__ANON__[lib/Kossy.pm:76]" -> "Encode::decode_utf8";
"Encode::utf8::decode_xs" -> "Encode::Encoding::renewed";
"Encode::BEGIN" -> "base::import";
"Encode::find_encoding" -> "Encode::getEncoding";
"Encode::decode" -> "Encode::LEAVE_SRC";
"Kossy::Request::BEGIN" -> "Encode::CORE:match";
"Kossy::Request::BEGIN" -> "Encode::predefine_encodings";
"Kossy::Response::_body" -> "Encode::encode_utf8";
"Encode::decode_utf8" -> "Encode::decode";
"Encode::BEGIN" -> "Encode::Encoding::CORE:match";
"Encode::BEGIN" -> "Encode::Alias::CORE:match";
"Encode::BEGIN" -> "Encode::Alias::init_aliases";
"Encode::BEGIN" -> "strict::import";
}
